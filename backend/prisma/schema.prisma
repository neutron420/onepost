generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql" // or your DB type
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @default(cuid())
  email    String  @unique
  name     String?
  imageUrl String?

  posts    Post[]       @relation("AuthorPosts")
  comments Comment[]
  likes    Like[]
  notifications Notification[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String    @id @default(cuid())
  title     String
  content   String
  imageUrl  String?   // for 10MB+ image URLs
  authorId  String
  author    User      @relation("AuthorPosts", fields: [authorId], references: [id])

  comments  Comment[]
  likes     Like[]

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Comment {
  id        String    @id @default(cuid())
  content   String
  postId    String
  post      Post      @relation(fields: [postId], references: [id])

  userId    String
  user      User      @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Like {
  id        String    @id @default(cuid())
  postId    String
  post      Post      @relation(fields: [postId], references: [id])

  userId    String
  user      User      @relation(fields: [userId], references: [id])

  createdAt DateTime  @default(now())

  @@unique([postId, userId]) // 1 like per user per post
}

model Notification {
  id        String    @id @default(cuid())
  type      String    // e.g. "like", "comment", "newPost"
  message   String
  userId    String
  user      User      @relation(fields: [userId], references: [id])

  read      Boolean   @default(false)

  createdAt DateTime  @default(now())
}
